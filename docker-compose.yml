version: '3.9'

services:
  
  nginx:
    restart: unless-stopped
    build: ./nginx
    ports:
      - "5000:80"
    env_file:
      - common.env
      - local.env
    volumes:
      - 'crawler-backend-assets:/assets/backend'
    depends_on:
      - 'backend'
  
  db:
    image: postgres:13.0-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=crawler
    volumes:
      - crawler-database:/var/lib/postgresql/data
    ports:
      - '6432:5432'

  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - '5001:5000'
    env_file:
      - common.env
      - local.env
    environment:
      DEBUG: 1
    volumes:
      - './backend:/app'
      - 'crawler-backend-assets:/assets'
    depends_on:
      - db

  celery:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file:
      - local.env
      - common.env
    volumes:
      - ./backend:/app
      - 'crawler-backend-assets:/assets'
    depends_on:
      - db
    command: /app/docker/run-celery.sh

  celery_beat:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file:
      - local.env
      - common.env
    volumes:
      - ./backend:/app
    depends_on:
      - db
    command: /app/docker/run-celery-beat.sh

  
  cache:
    image: 'bitnami/redis:latest'
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - cache:/bitnami/redis/data

volumes:
  crawler-backend-assets:
  crawler-database:
  cache:

